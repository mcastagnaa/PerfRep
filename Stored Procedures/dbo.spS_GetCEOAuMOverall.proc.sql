USE PerfRep
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

IF  EXISTS (
	SELECT * FROM dbo.sysobjects 
	WHERE 	id = OBJECT_ID(N'dbo.spS_GetCEOAuMOverall') AND 
		OBJECTPROPERTY(id,N'IsProcedure') = 1
	)
DROP PROCEDURE dbo.spS_GetCEOAuMOverall
GO

CREATE PROCEDURE dbo.spS_GetCEOAuMOverall
	@RefDate datetime
AS

DECLARE @PrevDate datetime
SET @PrevDate = (	
		SELECT	MAX(RefDate) 
		FROM 	tbl_EoMPerfSummary 
		WHERE	REfDate < @RefDate
		)

SET NOCOUNT ON;

------------------------------------------------

/*FOR THE BOARD REPORT (DUBLIN) ACTIVATE THE OTHER FILTER
THIS IS ALSO FOR spS_GetCEOPerfAll*/

------------------------------------------------

SELECT	*
INTO	#Last
FROM	tbl_EoMPerfSummary
WHERE	RefDate = @RefDate
--		AND SoldAs = 'UCITS4'	-- This is where the UCITS4 selections starts
								-- Take all those lines out to get the normal report

------------------------------------------------

SELECT	*
INTO	#Prev
FROM	tbl_EoMPerfSummary
WHERE	RefDate = @PrevDate
--		AND SoldAs = 'UCITS4'	-- This is where the UCITS4 selections starts
								-- Take all those lines out to get the normal report

------------------------------------------------
								-- Re-normalizing the weights
								-- Relevant when you filter by something (e.g. UCITS4)

DECLARE @LastTotalAuMWeight float
SET @LastTotalAuMWeight = (SELECT SUM(AuMWeight) FROM #Last)

DECLARE @PrevTotalAuMWeight float
SET @PrevTotalAuMWeight = (SELECT SUM(AuMWeight) FROM #Prev)

UPDATE #Last
SET		AumWeight = AuMWeight/@LastTotalAuMWeight

UPDATE #Prev
SET		AumWeight = AuMWeight/@PrevTotalAuMWeight

------------------------------------------------
SELECT	'AuM' AS Item
	, 'All' AS DeskGroup
	, 'All' AS Objective
	, 'Total' AS Qualifier
	, COUNT(AuMGBP) AS Number
	, SUM(AuMGBP) AS TotalAuM
	, SUM(AuMWeight) AS TotalAuMW
	, SUM(CASE WHEN Quart1m IS NOT NULL THEN 1 ELSE 0 END) AS QCount1m
	, SUM((CASE WHEN Quart1m IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP) AS QAuM1m
	, SUM((CASE WHEN Quart1m IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight) AS QAuMW1m
	, SUM(CASE WHEN Quart3m IS NOT NULL THEN 1 ELSE 0 END) AS QCount3m
	, SUM((CASE WHEN Quart3m IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP) AS QAuM3m
	, SUM((CASE WHEN Quart3m IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight) AS QAuMW3m
	, SUM(CASE WHEN QuartYtD IS NOT NULL THEN 1 ELSE 0 END) AS QCountYtD
	, SUM((CASE WHEN QuartYtD IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP) AS QAuMYtD
	, SUM((CASE WHEN QuartYtD IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight) AS QAuMWYtD
	, SUM(CASE WHEN Quart1y IS NOT NULL THEN 1 ELSE 0 END) AS QCount1y
	, SUM((CASE WHEN Quart1y IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP) AS QAuM1y
	, SUM((CASE WHEN Quart1y IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight) AS QAuMW1y
	, SUM(CASE WHEN Quart2y IS NOT NULL THEN 1 ELSE 0 END) AS QCount2y
	, SUM((CASE WHEN Quart2y IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP) AS QAuM2y
	, SUM((CASE WHEN Quart2y IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight) AS QAuMW2y
	, SUM(CASE WHEN Quart3y IS NOT NULL THEN 1 ELSE 0 END) AS QCount3y
	, SUM((CASE WHEN Quart3y IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP) AS QAuM3y
	, SUM((CASE WHEN Quart3y IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight) AS QAuMW3y
	, SUM(CASE WHEN Quart5y IS NOT NULL THEN 1 ELSE 0 END) AS QCount5y
	, SUM((CASE WHEN Quart5y IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP) AS QAuM5y
	, SUM((CASE WHEN Quart5y IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight) AS QAuMW5y
--
	, SUM(CASE WHEN BenchRP1m IS NOT NULL THEN 1 ELSE 0 END) AS BCount1m
	, SUM((CASE WHEN BenchRP1m IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP) AS BAuM1m
	, SUM((CASE WHEN BenchRP1m IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight) AS BAuMW1m
	, SUM(CASE WHEN BenchRP3m IS NOT NULL THEN 1 ELSE 0 END) AS BCount3m
	, SUM((CASE WHEN BenchRP3m IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP) AS BAuM3m
	, SUM((CASE WHEN BenchRP3m IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight) AS BAuMW3m
	, SUM(CASE WHEN BenchRPYtD IS NOT NULL THEN 1 ELSE 0 END) AS BCountYtD
	, SUM((CASE WHEN BenchRPYtD IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP) AS BAuMYtD
	, SUM((CASE WHEN BenchRPYtD IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight) AS BAuMWYtD
	, SUM(CASE WHEN BenchRP1y IS NOT NULL THEN 1 ELSE 0 END) AS BCount1y
	, SUM((CASE WHEN BenchRP1y IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP) AS BAuM1y
	, SUM((CASE WHEN BenchRP1y IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight) AS BAuMW1y
	, SUM(CASE WHEN BenchRP2ya IS NOT NULL THEN 1 ELSE 0 END) AS BCount2y
	, SUM((CASE WHEN BenchRP2ya IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP) AS BAuM2y
	, SUM((CASE WHEN BenchRP2ya IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight) AS BAuMW2y
	, SUM(CASE WHEN BenchRP3ya IS NOT NULL THEN 1 ELSE 0 END) AS BCount3y
	, SUM((CASE WHEN BenchRP3ya IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP) AS BAuM3y
	, SUM((CASE WHEN BenchRP3ya IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight) AS BAuMW3y
	, SUM(CASE WHEN BenchRP5ya IS NOT NULL THEN 1 ELSE 0 END) AS BCount5y
	, SUM((CASE WHEN BenchRP5ya IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP) AS BAuM5y
	, SUM((CASE WHEN BenchRP5ya IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight) AS BAuMW5y
	, @RefDate AS RefDate
INTO	#LastAuM
FROM 	#Last

UNION
SELECT	'AuM'
	, OurTeam
	, 'All'
	, 'Total'
	, COUNT(AuMGBP)
	, SUM(AuMGBP)
	, SUM(AuMWeight)
	, SUM(CASE WHEN Quart1m IS NOT NULL THEN 1 ELSE 0 END) 
	, SUM((CASE WHEN Quart1m IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN Quart1m IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN Quart3m IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN Quart3m IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN Quart3m IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN QuartYtD IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN QuartYtD IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN QuartYtD IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN Quart1y IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN Quart1y IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN Quart1y IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN Quart2y IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN Quart2y IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN Quart2y IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN Quart3y IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN Quart3y IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN Quart3y IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN Quart5y IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN Quart5y IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN Quart5y IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
--
	, SUM(CASE WHEN BenchRP1m IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN BenchRP1m IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN BenchRP1m IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN BenchRP3m IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN BenchRP3m IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN BenchRP3m IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN BenchRPYtD IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN BenchRPYtD IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN BenchRPYtD IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN BenchRP1y IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN BenchRP1y IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN BenchRP1y IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN BenchRP2ya IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN BenchRP2ya IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN BenchRP2ya IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN BenchRP3ya IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN BenchRP3ya IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN BenchRP3ya IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN BenchRP5ya IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN BenchRP5ya IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN BenchRP5ya IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, @RefDate AS RefDate
FROM	#Last
GROUP BY	OurTeam

UNION
SELECT	'AuM'
	, 'All'
	, PrimaryObj AS Objective
	, 'Total'
	, COUNT(AuMGBP)
	, SUM(AuMGBP)
	, SUM(AuMWeight)
	, SUM(CASE WHEN Quart1m IS NOT NULL THEN 1 ELSE 0 END) 
	, SUM((CASE WHEN Quart1m IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN Quart1m IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN Quart3m IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN Quart3m IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN Quart3m IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN QuartYtD IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN QuartYtD IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN QuartYtD IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN Quart1y IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN Quart1y IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN Quart1y IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN Quart2y IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN Quart2y IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN Quart2y IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN Quart3y IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN Quart3y IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN Quart3y IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN Quart5y IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN Quart5y IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN Quart5y IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
--
	, SUM(CASE WHEN BenchRP1m IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN BenchRP1m IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN BenchRP1m IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN BenchRP3m IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN BenchRP3m IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN BenchRP3m IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN BenchRPYtD IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN BenchRPYtD IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN BenchRPYtD IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN BenchRP1y IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN BenchRP1y IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN BenchRP1y IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN BenchRP2ya IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN BenchRP2ya IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN BenchRP2ya IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN BenchRP3ya IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN BenchRP3ya IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN BenchRP3ya IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN BenchRP5ya IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN BenchRP5ya IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN BenchRP5ya IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, @RefDate AS RefDate
FROM	#Last
GROUP BY	PrimaryObj

--SELECT	* FROM	#LastAuM

------------------------------------------------

SELECT	'AuM' AS Item
	, 'All' AS DeskGroup
	, 'All' AS Objective
	, 'Total' AS Qualifier
	, COUNT(AuMGBP) AS Number
	, SUM(AuMGBP) AS TotalAuM
	, SUM(AuMWeight) AS TotalAuMW
	, SUM(CASE WHEN Quart1m IS NOT NULL THEN 1 ELSE 0 END) AS QCount1m
	, SUM((CASE WHEN Quart1m IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP) AS QAuM1m
	, SUM((CASE WHEN Quart1m IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight) AS QAuMW1m
	, SUM(CASE WHEN Quart3m IS NOT NULL THEN 1 ELSE 0 END) AS QCount3m
	, SUM((CASE WHEN Quart3m IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP) AS QAuM3m
	, SUM((CASE WHEN Quart3m IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight) AS QAuMW3m
	, SUM(CASE WHEN QuartYtD IS NOT NULL THEN 1 ELSE 0 END) AS QCountYtD
	, SUM((CASE WHEN QuartYtD IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP) AS QAuMYtD
	, SUM((CASE WHEN QuartYtD IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight) AS QAuMWYtD
	, SUM(CASE WHEN Quart1y IS NOT NULL THEN 1 ELSE 0 END) AS QCount1y
	, SUM((CASE WHEN Quart1y IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP) AS QAuM1y
	, SUM((CASE WHEN Quart1y IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight) AS QAuMW1y
	, SUM(CASE WHEN Quart2y IS NOT NULL THEN 1 ELSE 0 END) AS QCount2y
	, SUM((CASE WHEN Quart2y IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP) AS QAuM2y
	, SUM((CASE WHEN Quart2y IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight) AS QAuMW2y
	, SUM(CASE WHEN Quart3y IS NOT NULL THEN 1 ELSE 0 END) AS QCount3y
	, SUM((CASE WHEN Quart3y IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP) AS QAuM3y
	, SUM((CASE WHEN Quart3y IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight) AS QAuMW3y
	, SUM(CASE WHEN Quart5y IS NOT NULL THEN 1 ELSE 0 END) AS QCount5y
	, SUM((CASE WHEN Quart5y IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP) AS QAuM5y
	, SUM((CASE WHEN Quart5y IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight) AS QAuMW5y
--
	, SUM(CASE WHEN BenchRP1m IS NOT NULL THEN 1 ELSE 0 END) AS BCount1m
	, SUM((CASE WHEN BenchRP1m IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP) AS BAuM1m
	, SUM((CASE WHEN BenchRP1m IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight) AS BAuMW1m
	, SUM(CASE WHEN BenchRP3m IS NOT NULL THEN 1 ELSE 0 END) AS BCount3m
	, SUM((CASE WHEN BenchRP3m IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP) AS BAuM3m
	, SUM((CASE WHEN BenchRP3m IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight) AS BAuMW3m
	, SUM(CASE WHEN BenchRPYtD IS NOT NULL THEN 1 ELSE 0 END) AS BCountYtD
	, SUM((CASE WHEN BenchRPYtD IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP) AS BAuMYtD
	, SUM((CASE WHEN BenchRPYtD IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight) AS BAuMWYtD
	, SUM(CASE WHEN BenchRP1y IS NOT NULL THEN 1 ELSE 0 END) AS BCount1y
	, SUM((CASE WHEN BenchRP1y IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP) AS BAuM1y
	, SUM((CASE WHEN BenchRP1y IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight) AS BAuMW1y
	, SUM(CASE WHEN BenchRP2ya IS NOT NULL THEN 1 ELSE 0 END) AS BCount2y
	, SUM((CASE WHEN BenchRP2ya IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP) AS BAuM2y
	, SUM((CASE WHEN BenchRP2ya IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight) AS BAuMW2y
	, SUM(CASE WHEN BenchRP3ya IS NOT NULL THEN 1 ELSE 0 END) AS BCount3y
	, SUM((CASE WHEN BenchRP3ya IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP) AS BAuM3y
	, SUM((CASE WHEN BenchRP3ya IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight) AS BAuMW3y
	, SUM(CASE WHEN BenchRP5ya IS NOT NULL THEN 1 ELSE 0 END) AS BCount5y
	, SUM((CASE WHEN BenchRP5ya IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP) AS BAuM5y
	, SUM((CASE WHEN BenchRP5ya IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight) AS BAuMW5y
	, @PrevDate AS RefDate
INTO	#PrevAuM
FROM 	#Prev

UNION
SELECT	'AuM'
	, OurTeam
	, 'All'
	, 'Total'
	, COUNT(AuMGBP)
	, SUM(AuMGBP)
	, SUM(AuMWeight)
	, SUM(CASE WHEN Quart1m IS NOT NULL THEN 1 ELSE 0 END) 
	, SUM((CASE WHEN Quart1m IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN Quart1m IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN Quart3m IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN Quart3m IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN Quart3m IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN QuartYtD IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN QuartYtD IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN QuartYtD IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN Quart1y IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN Quart1y IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN Quart1y IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN Quart2y IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN Quart2y IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN Quart2y IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN Quart3y IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN Quart3y IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN Quart3y IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN Quart5y IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN Quart5y IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN Quart5y IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
--
	, SUM(CASE WHEN BenchRP1m IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN BenchRP1m IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN BenchRP1m IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN BenchRP3m IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN BenchRP3m IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN BenchRP3m IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN BenchRPYtD IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN BenchRPYtD IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN BenchRPYtD IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN BenchRP1y IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN BenchRP1y IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN BenchRP1y IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN BenchRP2ya IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN BenchRP2ya IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN BenchRP2ya IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN BenchRP3ya IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN BenchRP3ya IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN BenchRP3ya IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN BenchRP5ya IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN BenchRP5ya IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN BenchRP5ya IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, @PrevDate AS RefDate
FROM	#Prev
GROUP BY	OurTeam

UNION
SELECT	'AuM'
	, 'All'
	, PrimaryObj AS Objective
	, 'Total'
	, COUNT(AuMGBP)
	, SUM(AuMGBP)
	, SUM(AuMWeight)
	, SUM(CASE WHEN Quart1m IS NOT NULL THEN 1 ELSE 0 END) 
	, SUM((CASE WHEN Quart1m IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN Quart1m IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN Quart3m IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN Quart3m IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN Quart3m IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN QuartYtD IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN QuartYtD IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN QuartYtD IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN Quart1y IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN Quart1y IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN Quart1y IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN Quart2y IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN Quart2y IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN Quart2y IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN Quart3y IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN Quart3y IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN Quart3y IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN Quart5y IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN Quart5y IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN Quart5y IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
--
	, SUM(CASE WHEN BenchRP1m IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN BenchRP1m IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN BenchRP1m IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN BenchRP3m IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN BenchRP3m IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN BenchRP3m IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN BenchRPYtD IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN BenchRPYtD IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN BenchRPYtD IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN BenchRP1y IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN BenchRP1y IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN BenchRP1y IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN BenchRP2ya IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN BenchRP2ya IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN BenchRP2ya IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN BenchRP3ya IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN BenchRP3ya IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN BenchRP3ya IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, SUM(CASE WHEN BenchRP5ya IS NOT NULL THEN 1 ELSE 0 END)
	, SUM((CASE WHEN BenchRP5ya IS NOT NULL THEN 1 ELSE 0 END)*AuMGBP)
	, SUM((CASE WHEN BenchRP5ya IS NOT NULL THEN 1 ELSE 0 END)*AuMWeight)
	, @PrevDate AS RefDate

FROM	#Prev
GROUP BY	PrimaryObj

--SELECT	* FROM	#PrevAuM

-----------------------------------------------------------

SELECT	ISNULL(L.Item, P.Item) AS Item
	, D.LongName As DeskName
	, ISNULL(L.DeskGroup, P.DeskGroup) AS DeskCode
	, ISNULL(L.Objective, P.Objective) AS Objective
	, ISNULL(L.Qualifier, P.Qualifier) AS Qualifier
	, L.RefDate
	, P.RefDate AS PrevDate
	, L.Number
	, L.TotalAuM
	, L.TotalAuMW
	, L.QCount1m
	, L.QAuM1m
	, L.QAuMW1m
	, L.QCount3m
	, L.QAuM3m
	, L.QAuMW3m
	, L.QCountYtD
	, L.QAuMYtD
	, L.QAuMWYtD
	, L.QCount1y
	, L.QAuM1y
	, L.QAuMW1y
	, L.QCount2y
	, L.QAuM2y
	, L.QAuMW2y
	, L.QCount3y
	, L.QAuM3y
	, L.QAuMW3y
	, L.QCount5y
	, L.QAuM5y
	, L.QAuMW5y
	, L.BCount1m
	, L.BAuM1m
	, L.BAuMW1m
	, L.BCount3m
	, L.BAuM3m
	, L.BAuMW3m
	, L.BCountYtD
	, L.BAuMYtD
	, L.BAuMWYtD
	, L.BCount1y
	, L.BAuM1y
	, L.BAuMW1y
	, L.BCount2y
	, L.BAuM2y
	, L.BAuMW2y
	, L.BCount3y
	, L.BAuM3y
	, L.BAuMW3y
	, L.BCount5y
	, L.BAuM5y
	, L.BAuMW5y
	, P.Number AS PNumber
	, P.TotalAuM AS PTotalAuM
	, P.TotalAuMW As PTotalAuMW
	, P.QCount1m AS PQCount1m
	, P.QAuM1m AS PQAuM1m
	, P.QAuMW1m AS PQAuMW1m
	, P.QCount3m AS PQCount3m
	, P.QAuM3m AS PQAuM3m
	, P.QAuMW3m AS PQAuMW3m
	, P.QCountytD AS PQCountYtD
	, P.QAuMYtD AS PQAuMYtD
	, P.QAuMWYtD AS PQAuMWYtD
	, P.QCount1y AS PQCount1y
	, P.QAuM1y AS PQAuM1y
	, P.QAuMW1y AS PQAuMW1y
	, P.QCount2y AS PQCount2y
	, P.QAuM2y AS PQAuM2y
	, P.QAuMW2y AS PQAuMW2y
	, P.QCount3y AS PQCount3y
	, P.QAuM3y AS PQAuM3y
	, P.QAuMW3y AS PQAuMW3y
	, P.QCount5y AS PQCount5y
	, P.QAuM5y AS PQAuM5y
	, P.QAuMW5y AS PQAuMW5y
	, P.BCount1m AS PBCount1m
	, P.BAuM1m AS PBAuM1m
	, P.BAuMW1m AS PBAuMW1m
	, P.BCount3m AS PBCount3m
	, P.BAuM3m AS PBAuM3m
	, P.BAuMW3m AS PBAuMW3m
	, P.BCountYtD AS PBCountYtD
	, P.BAuMYtD AS PBAuMYtD
	, P.BAuMWYtD AS PBAuMWYtD
	, P.BCount1y AS PBCount1y
	, P.BAuM1y AS PBAuM1y
	, P.BAuMW1y AS PBAuMW1y
	, P.BCount2y AS PBCount2y
	, P.BAuM2y AS PBAuM2y
	, P.BAuMW2y AS PBAuMW2y
	, P.BCount3y AS PBCount3y
	, P.BAuM3y AS PBAuM3y
	, P.BAuMW3y AS PBAuMW3y
	, P.BCount5y AS PBCount5y
	, P.BAuM5y AS PBAuM5y
	, P.BAuMW5y AS PBAuMW5y


FROM	#LastAuM AS L FULL JOIN
	#PrevAUM AS P ON (
		L.Item = P.Item
		AND L.DeskGroup = P.DeskGroup
		AND L.Qualifier = P.Qualifier
		AND L.Objective = P.Objective
		) JOIN
	tbl_desks AS D ON 
		(ISNULL(L.DeskGroup, P.DeskGroup) = D.Code)

-----------------------------------------------------------

DROP TABLE #Last
DROP TABLE #Prev
DROP TABLE #LastAuM
DROP TABLE #PrevAuM
------------------------------------------------
GO
GRANT EXECUTE ON dbo.spS_GetCEOAuMOverall TO [OMAM\Compliance]
